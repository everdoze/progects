format ELF64

public answer

answer:
push ebp ;сохраняем значение ebp
mov ebp, esp ;копируем указатель на начало стека в ebp
push ecx ;сохраняем значение регистра ecx
push edx ;сохраняем значение регистра edx
label x dword at ebp+8 ;объявляем переменную x
label y dword at ebp+12 ;объявляем переменную y
label z dword at ebp+16 ;объявляем переменную z

;--------------------------Вычисление выражения (x<<2+y>>2+z%3)------------------------
 mov eax, [y] ;заносим в EAX значение переменной y
     ;Convert Double-word to Quad-word
     ;cdq- преобразование двойного слова в учетвернное слово
     ;копирует знаковый бит регистра EAX на все биты EDX
 cdq ;Для положительного числа в edx поместиться 0, для отрицательного не 0
     ;xor edx, edx
     ;xor edx, edx- обнуляет регистр
 add eax, 2 ;прибавляем к значению EAX цифру 2
 mov ecx, eax ;заносим в ECX значение регистра EAX (сохраняем для дальнейших вычислений)
 mov eax, [x] ;заносим в EAX значение переменной x
 sal eax, cl ;выполняем сдвиг регистра EAX на CL разрядов (CL является младшей чатьсю регистра ECX, т.е. ECX = cl+ch)
	     ;shl для сдвига влево, sal для свига влево чисел со знаком
 mov ecx, eax ;заносим значение EAX в регистр ECX
 push ecx ;временно заносим значение регистра ECX в стек (временно сохраняем для дальнейших вычислений)
 cdq
 mov eax, [z] ;заносим в EAX значение переменной z
 mov ecx, 3 ;заносим в ECX цифру 3 для дальнейшего деления
 idiv ecx ;производим деление значение регистра EAX на значение регистра ECX; результат записывается в EAX
	  ;div - для умножения чисел без знака, idiv- со знаком
	  ;eax- результат деления, edx- остаток от деления
 mov eax, edx ;Т.к. нас интересует остаток от деления (операция %), то достаем значение регистра EDX и заносим в EAX
 add eax, 2 ;прибавляем к значению EAX цифру 2
 pop ecx ;достаем значение регистра ECX из стека (восстанавливаем предыдущее состояние)
 ;--------Производим обмен значениями EAX и ECX через регистр EDX----------------------
 mov edx, eax ;заносим в EDX значение регистра EAX
 mov eax, ecx ;заносим в EAX значение регистра ECX
 mov ecx, edx ;заносим в ECX значение регистра EDX
 ;-------------------------------------------------------------------------------------
 sar eax, cl ;выполняем сдвиг регистра EAX на CL разрядов (CL является младшей чатьсю регистра ECX, т.е. ECX = cl+ch)
	     ;shr для сдвига вправо, sar для свига вправо чисел со знаком
;--------------------------Конец вычислений--------------------------------------------

pop edx ;возвращаем edx в исходное состояние (достаем из стека)
pop ecx ;возвращаем ecx в исходное состояние (достаем из стека)
pop ebp ;возвращаем ebp в исходное состояние (достаем из стека)
ret ;возвращаем резултат ф-ции (возвращаем занчение EAX)